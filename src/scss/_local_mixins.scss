@import 'bootstrap/scss/mixins';

@mixin scroll {
  scrollbar-color: $scrollbar-thumb $scrollbar-track;

  &::-webkit-scrollbar {
    width: auto;
    height: auto;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $scrollbar-thumb;
  }

  &::-webkit-scrollbar-track {
    background-color: $scrollbar-track;
  }
}

@mixin interactive($color) {
  background-color: $color !important;

  &:hover {
    background-color: lighten($color, $lighter) !important;
  }

  &:active {
    background-color: darken($color, $darker) !important;
  }
}

@mixin icon($url, $size: $icons-size) {
  display: inline-flex !important;
  width: $size;
  -webkit-mask: url(/icons/#{$url}.svg) 0 0 / contain no-repeat,
  linear-gradient(#fff 0 0) !important;
  mask: url(/icons/#{$url}.svg) 0 0 / contain no-repeat,
  linear-gradient(#fff 0 0) !important;
  -webkit-mask-composite: destination-in !important;
  mask-composite: intersect !important;
  background: currentColor !important;

  &::before {
    content: '';
    display: block !important;
    padding-top: 100% !important;
  }
}

@mixin iconsCollection($collection, $size: $icons-size) {
  @each $icon in $collection {
    .ico-#{$icon} {
      @include icon(#{$icon}, $size);
    }
  }
}


@mixin fasesButtons {
  @include color-mode(dark) {
    color: lighten($item-color, 10%);
    background-color: darken($item-color, 10%);
    cursor: pointer;

    &:disabled {
      cursor: default;
      background-color: darken($item-color, 20%);
    }

    &:focus {
      color: lighten($item-color, 15%);
    }

    @for $i from 1 through length($option-collection) {
      &.idN#{($i - 1)} {
        $color: nth($option-collection, $i);
        color: #000;
        background-color: darken($color, 10%);
      }
    }
  }

  @include color-mode(light) {
    color: darken($item-color, 10%);
    background-color: lighten($item-color, 10%);
    cursor: pointer;

    &:disabled {
      cursor: default;
      background-color: lighten($item-color, 20%);
    }

    &:focus {
      color: darken($item-color, 15%);
    }

    @for $i from 1 through length($option-collection) {
      &.idN#{($i - 1)} {
        $color: nth($option-collection, $i);
        color: #000;
        background-color: lighten($color, 10%);
      }
    }
  }
}

@mixin dark-mode {
  @at-root :host-context([data-bs-theme="dark"]) {
    @content;
  }
}
