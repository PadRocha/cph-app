@import 'local_functions';
@import 'local_variables';
@import 'local_mixins';

@include iconsCollection($home-icon-collection);

@mixin idn_styles($color) {
  color: $color;
  background-color: inherit;
  border: none;

  &::after {
    content: '[' attr(data-info) ']';
    margin-left: 0.25rem !important;
  }

  &:hover,
  &.active {
    color: lighten($color, $darker);
    background-color: contrast_color($color);
  }

  &:active {
    color: lighten($color, $lighter);
  }

  &.active {
    text-decoration-line: line-through;
  }
}

@for $i from 1 through length($option-collection) {
  .idN#{($i - 1)} {
    $color: nth($option-collection, $i);
    @include idn_styles($color);
  }

  [data-bs-theme=dark] .idN#{($i - 1)} {
    $color: nth($option-collection-dark, $i);
    @include idn_styles($color);
  }
}

.idN0 {
  color: #1a1a1a;
}

form {
  background-color: $background-main;
  color: $text-color;

  &[data-bs-theme=dark] {
    background-color: $background-main-dark;
    color: $text-color-dark;
  }
}

//========================================================
// Grid y tarjetas
//========================================================

.grid {
  display: grid;
  // Una columna por defecto en pantallas pequeñas
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;

  @include media-breakpoint-up(md) {
    grid-template-columns: repeat(2, 1fr);
  }
  @include media-breakpoint-up(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
  @include media-breakpoint-up(xl) {
    grid-template-columns: repeat(4, 1fr);
  }
  @include media-breakpoint-up(xxl) {
    grid-template-columns: repeat(5, 1fr);
  }
}

.item-card {
  border: 1px solid rgba(0, 0, 0, 0.125);
  border-radius: 0.25rem;
  background-color: $primary;

  [data-bs-theme=dark] & {
    background-color: $secundary;
    color: $text-color-dark;
  }

  header {
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);

    [data-bs-theme=dark] & {
      border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    }

    & h5 {
      margin-bottom: 0;
    }
  }

  .img-placeholder {
    min-height: 120px;
    background-color: rgba(#000, 0.05);
    border: 1px dashed rgba(#000, 0.2);
    border-radius: 0.25rem;
    [data-bs-theme=dark] & {
      background-color: rgba(#fff, 0.05);
      border-color: rgba(#fff, 0.2);
    }
  }

  .form-select {
    background-image: none !important; // Quita la flecha
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    // display: flex;
    // align-items: center;
    // justify-content: center;
    // text-align: center;
    // padding: 0.375rem 0.75rem; 
  }
}

//========================================================
// Skeleton loader
//========================================================

.skeleton {
  position: relative;
  overflow: hidden;
  background: linear-gradient(
    100deg,
    #e9ecef 30%,
    #f8f9fa 50%,
    #e9ecef 70%
  );
  background-size: 200% 100%;
  animation: wave 1.5s ease-in-out infinite;
  
  [data-bs-theme=dark] & {
    background: linear-gradient(
      100deg,
      #444 30%,
      #666 50%,
      #444 70%
    );
    background-size: 200% 100%;
  }

  &.skeleton-text {
    border-radius: 4px;
    height: 1rem;
  }

  &.skeleton-btn {
    width: 38px;
    height: 38px;
    border-radius: 0.25rem;
  }

  &.skeleton-rect {
    border-radius: 0.25rem;
    min-height: 120px;
  }

  // Actualización para los select: uso de flex para ser responsive
  &.skeleton-select {
    flex: 1 1; // base de 80px, pero permite crecer o contraerse
    height: 38px;
    border-radius: 0.25rem;
  }

  &.skeleton-button {
    width: 30px;
    height: 30px;
    border-radius: 50%;
  }
}

.item-card.loading:nth-child(1) .skeleton {
  animation-delay: 0.1s;
}
.item-card.loading:nth-child(2) .skeleton {
  animation-delay: 0.2s;
}
.item-card.loading:nth-child(3) .skeleton {
  animation-delay: 0.3s;
}
.item-card.loading:nth-child(4) .skeleton {
  animation-delay: 0.4s;
}

@keyframes wave {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

//========================================================
// Estado vacío
//========================================================

.empty-state {
  color: $text-color;
  opacity: 0.8;

  [data-bs-theme=dark] & {
    color: $text-color-dark;
  }
}