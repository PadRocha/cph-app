@import "local_functions";
@import "local_variables";
@import "local_mixins";

@include iconsCollection($home-icon-collection);

@mixin idn_styles($color) {
  color: $color;
  background-color: inherit;
  border: none;

  &::after {
    content: "[" attr(data-info) "]";
    margin-left: 0.25rem !important;
  }

  &:hover,
  &.active {
    color: lighten($color, $darker);
    background-color: contrast_color($color);
  }

  &:active {
    color: lighten($color, $lighter);
  }

  &.active {
    text-decoration-line: line-through;
  }
}

@for $i from 1 through length($option-collection) {
  .idN#{($i - 1)} {
    $color: nth($option-collection, $i);
    @include idn_styles($color);
  }

  [data-bs-theme=dark] .idN#{($i - 1)} {
    $color: nth($option-collection-dark, $i);
    @include idn_styles($color);
  }
}

.idN0 {
  color: #1a1a1a;
}

// ====================================================
// Estilos del formulario
// ====================================================
form {
  background-color: $background-main;
  color: $text-color;

  &[data-bs-theme=dark] {
    background-color: $background-main-dark;
    color: $text-color-dark;
  }
}

// ====================================================
// Grid para disposición de las tarjetas (y skeleton loader)
// ====================================================
.grid {
  display: grid;
  gap: 1rem;
  // Definición responsive de columnas:
  grid-template-columns: repeat(2, 1fr);

  @include media-breakpoint-up(md) {
    grid-template-columns: repeat(2, 1fr);
  }
  @include media-breakpoint-up(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
  @include media-breakpoint-up(xl) {
    grid-template-columns: repeat(4, 1fr);
  }
  @include media-breakpoint-up(xxl) {
    grid-template-columns: repeat(5, 1fr);
  }
}

// ====================================================
// Reglas específicas para el skeleton loader
// ====================================================
.skeleton {
  position: relative;
  overflow: hidden;
  background: linear-gradient(100deg, #e9ecef 30%, #f8f9fa 50%, #e9ecef 70%);
  background-size: 200% 100%;
  animation: wave 1.5s ease-in-out infinite;

  [data-bs-theme=dark] & {
    background: linear-gradient(100deg, #444 30%, #666 50%, #444 70%);
    background-size: 200% 100%;
  }

  &.skeleton-text {
    border-radius: 4px;
    height: 1rem;
  }

  &.skeleton-rect {
    border-radius: 0.25rem;
    min-height: 160px;
  }

  &.skeleton-select {
    flex: 1 1;
    height: 38px;
    border-radius: 0.25rem;
  }

  &.skeleton-button {
    width: 1rem;
    height: 1rem;
    border-radius: 0.25rem;
  }
}

.item-card.loading {
  padding: 0.5rem !important;
  border: 1px solid rgba(0, 0, 0, 0.125);
  border-radius: 0.25rem;
  background-color: $primary;

  [data-bs-theme=dark] & {
    background-color: $secundary;
    color: $text-color-dark;
  }

  &.input-group {
    display: flex;
    flex-wrap: wrap;
    gap: 0.125rem;
    align-items: center;
  }
}

.item-card.loading:nth-child(1) .skeleton {
  animation-delay: 0.1s;
}
.item-card.loading:nth-child(2) .skeleton {
  animation-delay: 0.2s;
}
.item-card.loading:nth-child(3) .skeleton {
  animation-delay: 0.3s;
}
.item-card.loading:nth-child(4) .skeleton {
  animation-delay: 0.4s;
}

@keyframes wave {
  from {
    background-position: 200% 0;
  }
  to {
    background-position: -200% 0;
  }
}

// ====================================================
// Estado vacío
// ====================================================
.empty-state {
  color: $text-color;
  opacity: 0.8;

  [data-bs-theme=dark] & {
    color: $text-color-dark;
  }
}
